services:
  httpbin:
    image: mccutchen/go-httpbin:v2.9.0
    command: [ "/bin/go-httpbin", "-port", "8081" ]
    ports:
      - 8081:8081

  envoy:
    depends_on:
      - httpbin
      - ext-authz
    image: ${ENVOY_IMAGE:-envoyproxy/envoy:v1.28-latest}
    # Entryoint is explicited in order to make the ENVOY_IMAGE compatible also with istio/proxyv2 images
    # The latter has as default entrypoint pilot-agent instead of envoy
    # See https://github.com/tetratelabs/proxy-wasm-go-sdk/blob/main/.github/workflows/workflow.yaml#L104
    entrypoint: /usr/local/bin/envoy
    command:
      - -c
      - /conf/envoy-config.yaml
      - --service-cluster # required to export metrics
      - envoy
      - --service-node # required to export metrics
      - envoy
      - --log-level
      - debug
    volumes:
      - .:/conf
    ports:
    - 8080:8080
  
  ext-authz:
    build:
      context: ..
      dockerfile: Dockerfile
    expose:
      - 9002
    ports:
    - 9002:9002
    command: ["--config", "./config.yaml"]
    depends_on:
      openfga:
        condition: service_healthy
  
  openfga:
    image: openfga/openfga:latest
    container_name: openfga
    command: run
    environment:
      - OPENFGA_DATASTORE_ENGINE=memory
    ports:
      - "18080:8080" #http
      - "18081:8081" #grpc
      - "3000:3000" #playground
      - "2112:2112" #prometheus metrics
    healthcheck:
      test: ["CMD", "/usr/local/bin/grpc_health_probe", "-addr=openfga:8081"]
      interval: 5s
      timeout: 30s
      retries: 3
